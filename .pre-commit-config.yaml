# Pre-commit configuration for text-to-audiobook project
# This file configures automatic code quality checks that run before each commit

repos:
  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies:
          - flake8-docstrings
          - flake8-annotations
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--config-file=pyproject.toml]
        additional_dependencies:
          - types-requests
          - types-redis
          - types-beautifulsoup4

  # Security scanning with Bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -f, json, -o, bandit-report.json]
        pass_filenames: false

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Remove trailing whitespace
      - id: trailing-whitespace
        exclude: \.md$
      
      # Ensure files end with newline
      - id: end-of-file-fixer
        exclude: \.md$
      
      # Check YAML syntax
      - id: check-yaml
        args: [--allow-multiple-documents]
      
      # Check JSON syntax
      - id: check-json
      
      # Check for merge conflicts
      - id: check-merge-conflict
      
      # Check for large files (>500KB)
      - id: check-added-large-files
        args: [--maxkb=500]
      
      # Prevent committing to main/master
      - id: no-commit-to-branch
        args: [--branch=main, --branch=master]
      
      # Check Python AST
      - id: check-ast
      
      # Check docstring first line
      - id: check-docstring-first
      
      # Fix Python encoding pragma
      - id: fix-encoding-pragma
        args: [--remove]

  # Docker file linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Check dependencies for security vulnerabilities
  - repo: local
    hooks:
      - id: safety-check
        name: Safety dependency vulnerability check
        entry: safety
        args: [check, --json]
        language: python
        additional_dependencies: [safety]
        pass_filenames: false

      # Custom hook for requirement file compilation
      - id: pip-compile
        name: Compile requirements files
        entry: pip-compile
        args: [requirements.in]
        language: python
        additional_dependencies: [pip-tools]
        files: requirements\.in$
        pass_filenames: false

      - id: pip-compile-dev
        name: Compile development requirements
        entry: pip-compile
        args: [requirements-dev.in]
        language: python
        additional_dependencies: [pip-tools]
        files: requirements-dev\.in$
        pass_filenames: false

      # Custom hook for pytest execution
      - id: pytest-unit
        name: Run unit tests
        entry: python
        args: [-m, pytest, tests/unit/, -v, --tb=short]
        language: python
        pass_filenames: false
        stages: [manual]

# Configuration for specific hooks
default_stages: [commit, push]
fail_fast: false

# Exclude patterns
exclude: |
  (?x)^(
    \.git/.*|
    \.venv/.*|
    venv/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    .*\.pyc|
    logs/.*|
    output/.*|
    input/.*|
    temp/.*|
    \.coverage|
    htmlcov/.*|
    dist/.*|
    build/.*|
    .*\.egg-info/.*
  )$