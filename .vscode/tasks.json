{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-r", "requirements.txt", "-r", "requirements-dev.txt"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Compile Requirements",
            "type": "shell",
            "command": "pip-compile",
            "args": ["requirements.in", "&&", "pip-compile", "requirements-dev.in"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "python",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(.*)",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            }
        },
        {
            "label": "Run Unit Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/unit/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "python",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(.*)",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            }
        },
        {
            "label": "Run Integration Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/integration/", "-v", "-m", "not external"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "python",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(.*)",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            }
        },
        {
            "label": "Run Performance Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/performance/", "-v", "-m", "performance"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Format Code (Black)",
            "type": "shell",
            "command": "black",
            "args": ["src/", "tests/", "--line-length=88"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Sort Imports (isort)",
            "type": "shell",
            "command": "isort",
            "args": ["src/", "tests/", "--profile=black"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint Code (flake8)",
            "type": "shell",
            "command": "flake8",
            "args": ["src/", "tests/", "--max-line-length=88", "--extend-ignore=E203,W503"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "flake8",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(\\w+)\\s+(.*)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "Type Check (mypy)",
            "type": "shell",
            "command": "mypy",
            "args": ["src/"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": {
                "owner": "mypy",
                "fileLocation": ["relative", "${workspaceFolder}"],
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(\\w+):\\s+(.*)",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Security Check (bandit)",
            "type": "shell",
            "command": "bandit",
            "args": ["-r", "src/", "-f", "text"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Dependency Security Check (safety)",
            "type": "shell",
            "command": "safety",
            "args": ["check"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Pre-commit Run All",
            "type": "shell",
            "command": "pre-commit",
            "args": ["run", "--all-files"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Build Development Docker",
            "type": "shell",
            "command": "docker",
            "args": ["build", "-f", "docker/Dockerfile.dev", "-t", "text-to-audiobook:dev", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run in Development Docker",
            "type": "shell",
            "command": "docker",
            "args": ["run", "-it", "--rm", "-v", "${workspaceFolder}:/app", "-p", "8000:8000", "text-to-audiobook:dev"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Memory Profile Text Extraction",
            "type": "shell",
            "command": "python",
            "args": ["-m", "memory_profiler", "tests/performance/memory_profile_text_extraction.py"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Memory Profile Text Structuring",
            "type": "shell",
            "command": "python",
            "args": ["-m", "memory_profiler", "tests/performance/memory_profile_text_structuring.py"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Build Artifacts",
            "type": "shell",
            "command": "find",
            "args": [".", "-type", "f", "-name", "*.pyc", "-delete", "&&", "find", ".", "-type", "d", "-name", "__pycache__", "-exec", "rm", "-rf", "{}", "+", "&&", "rm", "-rf", ".pytest_cache", "htmlcov", "dist", "build", "*.egg-info"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Full Code Quality Check",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Format Code (Black)",
                "Sort Imports (isort)",
                "Lint Code (flake8)",
                "Type Check (mypy)",
                "Security Check (bandit)",
                "Run Unit Tests"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        }
    ]
}