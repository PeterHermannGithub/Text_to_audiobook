[tool:pytest]
# Pytest configuration file for text-to-audiobook project

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --durations=10
    --color=yes
    --junitxml=reports/junit.xml
    --cov=src
    --cov-report=html:reports/coverage_html
    --cov-report=term-missing
    --cov-report=xml:reports/coverage.xml
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    benchmark: Benchmark tests
    slow: Slow running tests
    external: Tests requiring external services (Kafka, Spark, etc.)
    smoke: Smoke tests for basic functionality
    e2e: End-to-end tests
    regression: Regression tests
    spark: Tests requiring Spark session
    kafka: Tests requiring Kafka services
    redis: Tests requiring Redis services
    llm: Tests requiring LLM services
    cache: Tests for caching functionality
    validation: Tests for validation components
    monitoring: Tests for monitoring and metrics
    distributed: Tests for distributed processing components

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:kafka
    ignore::UserWarning:pyspark
    ignore::UserWarning:py4j

# Test directories
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    venv
    env
    __pycache__
    node_modules
    .pytest_cache

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeout
timeout = 300
timeout_method = thread

# Parallel execution
xvfb = false

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */build/*
    */dist/*
    */.tox/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = reports/coverage_html

[coverage:xml]
output = reports/coverage.xml